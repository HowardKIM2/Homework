1. 문제 은행 풀이
2. typedef 사용법
3. malloc() 과 free() 사용법
4. calloc() 사용법
5. Stack 메모리와 Heap 메모리
6. 구조체(커스텀 데이터 타입)
7. 구조체 안에 구조체 넣기
8. 구조체 배열과 포인터
9. 구조체 참조 연산자
10. 어째서 아두이노, 라즈베리파이 따위를 하면 망하는가
    (이건 초등학생들이나 가지고 노는 것임)
11. enum(열거형)의 유용성(네트워크 프로그래밍)
12. 함수 포인터 기본기
    void (* signal(int signum, void (* handler)(int)))(int);
    리눅스 System Call 인 signal 을
    제대로 이해하기 위한 기본중의 기본
13. 상용 SW 에서 어떤식으로 함수 포인터를 활용하는가(Matlab 등등)
14. 시스템(커널) 개발 차원에서 함수 포인터의 중요성

void (* signal(int signum, void (* handler)(int)))(int);

* 함수 프로토타입이란 ?

리턴, 함수명, 인자에 대한 기술서
그렇다면 위 함수에 대한 프로토타입은 뭘까 ?

이전에 배웠던 int (*p)[2]; -> int (*)[2] p

리턴: void (*)(int)
함수명: signal
인자: int signum 과 void (* handler)(int)

void (*p)(void):
void 를 리턴하고 void 를 인자로 취하는
함수의 주소값을 저장할 수 있는 변수 p

int aaa(int, int);

int (*p)(int, int);